// <auto-generated />
using System;
using INTEX4_6.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace INTEX4_6.Migrations.MovieDb
{
    [DbContext(typeof(MovieDbContext))]
    [Migration("20250408201726_MakeEmailUniqueInMovieUsers")]
    partial class MakeEmailUniqueInMovieUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("INTEX4_6.Data.Movie", b =>
                {
                    b.Property<string>("ShowId")
                        .HasColumnType("TEXT")
                        .HasColumnName("show_id");

                    b.Property<bool?>("Action")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Action");

                    b.Property<bool?>("Adventure")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Adventure");

                    b.Property<bool?>("AnimeSeriesInternationalTvShows")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Anime Series International TV Shows");

                    b.Property<bool?>("BritishTvShowsDocuseriesInternationalTvShows")
                        .HasColumnType("INTEGER")
                        .HasColumnName("British TV Shows Docuseries International TV Shows");

                    b.Property<string>("Cast")
                        .HasColumnType("TEXT")
                        .HasColumnName("cast");

                    b.Property<bool?>("Children")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Children");

                    b.Property<bool?>("Comedies")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Comedies");

                    b.Property<bool?>("ComediesDramasInternationalMovies")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Comedies Dramas International Movies");

                    b.Property<bool?>("ComediesInternationalMovies")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Comedies International Movies");

                    b.Property<bool?>("ComediesRomanticMovies")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Comedies Romantic Movies");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT")
                        .HasColumnName("country");

                    b.Property<bool?>("CrimeTvShowsDocuseries")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Crime TV Shows Docuseries");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Director")
                        .HasColumnType("TEXT")
                        .HasColumnName("director");

                    b.Property<bool?>("Documentaries")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Documentaries");

                    b.Property<bool?>("DocumentariesInternationalMovies")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Documentaries International Movies");

                    b.Property<bool?>("Docuseries")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Docuseries");

                    b.Property<bool?>("Dramas")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Dramas");

                    b.Property<bool?>("DramasInternationalMovies")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Dramas International Movies");

                    b.Property<bool?>("DramasRomanticMovies")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Dramas Romantic Movies");

                    b.Property<string>("Duration")
                        .HasColumnType("TEXT")
                        .HasColumnName("duration");

                    b.Property<bool?>("FamilyMovies")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Family Movies");

                    b.Property<bool?>("Fantasy")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Fantasy");

                    b.Property<bool?>("HorrorMovies")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Horror Movies");

                    b.Property<bool?>("InternationalMoviesThrillers")
                        .HasColumnType("INTEGER")
                        .HasColumnName("International Movies Thrillers");

                    b.Property<bool?>("InternationalTvShowsRomanticTvShowsTvDramas")
                        .HasColumnType("INTEGER")
                        .HasColumnName("International TV Shows Romantic TV Shows TV Dramas");

                    b.Property<bool?>("KidsTv")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Kids' TV");

                    b.Property<bool?>("LanguageTvShows")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Language TV Shows");

                    b.Property<bool?>("Musicals")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Musicals");

                    b.Property<bool?>("NatureTv")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Nature TV");

                    b.Property<string>("Rating")
                        .HasColumnType("TEXT")
                        .HasColumnName("rating");

                    b.Property<bool?>("RealityTv")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Reality TV");

                    b.Property<string>("ReleaseYear")
                        .HasColumnType("TEXT")
                        .HasColumnName("release_year");

                    b.Property<bool?>("Spirituality")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Spirituality");

                    b.Property<bool?>("TalkShowsTvComedies")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Talk Shows TV Comedies");

                    b.Property<bool?>("Thrillers")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Thrillers");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT")
                        .HasColumnName("title");

                    b.Property<bool?>("TvAction")
                        .HasColumnType("INTEGER")
                        .HasColumnName("TV Action");

                    b.Property<bool?>("TvComedies")
                        .HasColumnType("INTEGER")
                        .HasColumnName("TV Comedies");

                    b.Property<bool?>("TvDramas")
                        .HasColumnType("INTEGER")
                        .HasColumnName("TV Dramas");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT")
                        .HasColumnName("type");

                    b.HasKey("ShowId");

                    b.ToTable("movies_titles");
                });

            modelBuilder.Entity("INTEX4_6.Data.MovieUserInfo", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_id");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER")
                        .HasColumnName("age");

                    b.Property<bool>("AmazonPrime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Amazon Prime");

                    b.Property<bool>("AppleTV")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Apple TV+");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("city");

                    b.Property<bool>("DisneyPlus")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Disney+");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("gender");

                    b.Property<bool>("Hulu")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Hulu");

                    b.Property<string>("IdentityUserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Max")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Max");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<bool>("Netflix")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Netflix");

                    b.Property<bool>("ParamountPlus")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Paramount+");

                    b.Property<bool>("Peacock")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Peacock");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("phone");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("state");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("zip");

                    b.HasKey("UserId");

                    b.HasIndex("IdentityUserId");

                    b.ToTable("movies_users");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("IdentityUser");
                });

            modelBuilder.Entity("INTEX4_6.Data.MovieUserInfo", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("IdentityUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdentityUser");
                });
#pragma warning restore 612, 618
        }
    }
}
